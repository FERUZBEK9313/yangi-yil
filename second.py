from aiogram import *
from aiogram.types import *
from aiogram.utils import executor
from datetime import date

TOKEN = "5865860744:AAG4oMuAE0tjeKj2ze6jLDdKfrj0Tl5iQCs"
bot = Bot(token=TOKEN)
dp = Dispatcher(bot=bot)

button = ReplyKeyboardMarkup(resize_keyboard=True).row('‚è≥ –°–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –Ω–æ–≤–æ–≥–æ –≥–æ–¥–∞? ‚è≥')

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    anm = open('animation.tgs', 'rb')
    await bot.send_animation(message.chat.id, anm)
    await bot.send_message(message.chat.id, f'üëã–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π –¥–æ—Ä–æ–≥–æ–π *{message.from_user.first_name}*.\n*–ße–º —è –≤–∞–º –º–æ–≥—É –ø–æ–º–æ—á—å ?*', reply_markup=button, parse_mode='Markdown')

@dp.message_handler()
async def event(message: types.Message):
    today = date.today()
    d, m, y = today.strftime("%d %m %Y").split()
    if message.text == '‚è≥ –°–∫–æ–ª—å–∫–æ –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ –Ω–æ–≤–æ–≥–æ –≥–æ–¥–∞? ‚è≥':
        await message.answer(f'üóì <b><i>{31-int(d)}</i></b> –¥–Ω–µ–π –æ—Å—Ç–∞–ª–æ—Å—å –¥–æ üéÑ<b>–ù–û–í–û–ì–û –ìO–îA</b>üéÑ', parse_mode='html')

if __name__=='__main__':
    executor.start_polling(dp, skip_updates=True)





